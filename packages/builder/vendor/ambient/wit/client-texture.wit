interface client-texture {
    use types.{ulid}

    variant format {
        r8-unorm,
        r8-snorm,
        r8-uint,
        r8-sint,
        r16-uint,
        r16-sint,
        r16-unorm,
        r16-snorm,
        r16-float,
        rg8-unorm,
        rg8-snorm,
        rg8-uint,
        rg8-sint,
        r32-uint,
        r32-sint,
        r32-float,
        rg16-uint,
        rg16-sint,
        rg16-unorm,
        rg16-snorm,
        rg16-float,
        rgba8-unorm,
        rgba8-unorm-srgb,
        rgba8-snorm,
        rgba8-uint,
        rgba8-sint,
        bgra8-unorm,
        bgra8-unorm-srgb,
        rgb9e5-ufloat,
        rgb10a2-unorm,
        rg11b10-float,
        rg32-uint,
        rg32-sint,
        rg32-float,
        rgba16-uint,
        rgba16-sint,
        rgba16-unorm,
        rgba16-snorm,
        rgba16-float,
        rgba32-uint,
        rgba32-sint,
        rgba32-float,
    }

    record descriptor2d {
        width: u32,
        height: u32,
        format: format,
        data: list<u8>,
    }

    record handle {
        ulid: ulid
    }

    create2d: func(desc: descriptor2d) -> handle
    destroy: func(handle: handle)
}
